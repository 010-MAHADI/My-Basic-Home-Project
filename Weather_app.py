import requests
def get_weather_data(location):
    #get an api from openweathermap.org
    api_key='9663bf9d35800c25286db2de1dad0d36'
    base_url="https://api.openweathermap.org/data/2.5/weather"
    params={"q":location,"appid":api_key}
    try:
        response=requests.get(base_url,params=params)
        if response.status_code==200:
            weather_data=response.json()
            return weather_data
        else:
            print("Faild to Fetch Weather Data.Status Code:",response.status_code)
            return None
    except requests.RequestException as e:
        print("Eroor Occurred during request:",e)
        return None
def print_weather_data(weather_data):
    if weather_data:
        print("Basic Weather Data")
        print("Location:",weather_data['name'])
        print("Description:",weather_data['weather'][0]['description'])
        print("Temperature(Celsius):",weather_data['main']['temp']-273.15)
        print("Humidity:",weather_data['main']['humidity'])
        print("Wind Speed (m/s):",weather_data['wind']['speed'])
    else:
        print("No weather data available.")
def main():
    location=input("Enter Location Name:")
    weather_data= get_weather_data(location)
    print_weather_data(weather_data)
main()



ржмрж╛ржВрж▓рж╛рзЯ ржмрж░рзНржгржирж╛

ржХрзЛржбржЯрж┐ ржПржХржЯрж┐ рж╕рж╛ржзрж╛рж░ржг Weather App ржпрж╛ OpenWeatherMap API ржмрзНржпржмрж╣рж╛рж░ ржХрж░рзЗ ржХрзЛржи ржПржХржЯрж┐ рж╢рж╣рж░рзЗрж░ ржмрж░рзНрждржорж╛ржи ржЖржмрж╣рж╛ржУрзЯрж╛рж░ рждржерзНржп ржирж┐рзЯрзЗ ржЖрж╕рзЗред ржирж┐ржЪрзЗ рж▓рж╛ржЗржи ржмрж╛ржЗ рж▓рж╛ржЗржи ржмрзНржпрж╛ржЦрзНржпрж╛ ржХрж░ржЫрж┐:


---

ЁЯФ╣ import requests

ЁЯСЙ requests ржПржХржЯрж┐ Python рж▓рж╛ржЗржмрзНрж░рзЗрж░рж┐ ржпрж╛ HTTP рж░рж┐ржХрзЛржпрж╝рзЗрж╕рзНржЯ ржкрж╛ржарж╛рждрзЗ ржмрзНржпржмрж╣рж╛рж░ ржХрж░рж╛ рж╣ржпрж╝ (ржпрзЗржоржи: GET, POST)ред
ржПржЗ ржкрзНрж░ржЬрзЗржХрзНржЯрзЗ ржЖржорж░рж╛ OpenWeatherMap API рждрзЗ GET рж░рж┐ржХрзЛржпрж╝рзЗрж╕рзНржЯ ржкрж╛ржарж╛ржмрзЛред


---

ЁЯФ╣ def fetch_weather_data(location):

ЁЯСЙ ржПржЯрж┐ ржПржХржЯрж┐ ржлрж╛ржВрж╢ржи ржпрж╛рж░ ржХрж╛ржЬ рж╣рж▓рзЛ ржЗржЙржЬрж╛рж░ ржжрзНржмрж╛рж░рж╛ ржжрзЗржУржпрж╝рж╛ рж▓рзЛржХрзЗрж╢ржирзЗрж░ ржЖржмрж╣рж╛ржУржпрж╝рж╛ рждржерзНржп API ржерзЗржХрзЗ рж╕ржВржЧрзНрж░рж╣ ржХрж░рж╛ред


---

ЁЯФ╣ api_key='9663bf9d35800c25286db2de1dad0d36'

ЁЯСЙ ржПржЯрж┐ рждрзЛржорж╛рж░ OpenWeatherMap API Keyред ржПржЗ key ржжрж┐рзЯрзЗ ржкрзНрж░ржорж╛ржг ржХрж░рж╛ рж╣рзЯ ржпрзЗ рждрзБржорж┐ API ржмрзНржпржмрж╣рж╛рж░ ржХрж░рж╛рж░ ржЕржирзБржорждрж┐ ржкрзЗрзЯрзЗржЫрзЛред


---

ЁЯФ╣ base_url="https://api.openweathermap.org/data/2.5/weather"

ЁЯСЙ ржПржЯрж┐ рж╣рж▓рзЛ рж╕рзЗржЗ API ржПрж░ ржорзВрж▓ URL ржпрж╛ ржерзЗржХрзЗ ржЖржмрж╣рж╛ржУрзЯрж╛рж░ ржбрзЗржЯрж╛ ржЖрж╕ржмрзЗред


---

ЁЯФ╣ params={"q":location,"appid":api_key}

ЁЯСЙ ржПржЯрж┐ рж╣рж▓рзЛ URL ржПрж░ ржХрзБрзЯрзЗрж░рж┐ ржкрзНржпрж╛рж░рж╛ржорж┐ржЯрж╛рж░ред

q ржПрж░ ржорж╛ржи рж╣ржЪрзНржЫрзЗ рж▓рзЛржХрзЗрж╢ржи (рж╢рж╣рж░рзЗрж░ ржирж╛ржо)

appid рж╣ржЪрзНржЫрзЗ API key



---

ЁЯФ╣ response=requests.get(base_url,params=params)

ЁЯСЙ GET рж░рж┐ржХрзЛрзЯрзЗрж╕рзНржЯ ржкрж╛ржарж╛ржирзЛ рж╣ржЪрзНржЫрзЗ OpenWeatherMap API рждрзЗред


---

ЁЯФ╣ if response.status_code==200:

ЁЯСЙ ржЪрзЗржХ ржХрж░рж╛ рж╣ржЪрзНржЫрзЗ HTTP рж░рзЗрж╕ржкржирзНрж╕ ржХрзЛржб 200 ржХрж┐ржирж╛ред 200 ржорж╛ржирзЗ: рж╕ржлрж▓ржнрж╛ржмрзЗ ржбрзЗржЯрж╛ ржкрж╛ржУрзЯрж╛ ржЧрзЗржЫрзЗред


---

ЁЯФ╣ weather_data=response.json()

ЁЯСЙ ржпржжрж┐ рж╕ржлрж▓ рж╣рзЯ, рждрж╛рж╣рж▓рзЗ JSON ржлрж░ржорзНржпрж╛ржЯрзЗ ржбрзЗржЯрж╛ ржХржиржнрж╛рж░рзНржЯ ржХрж░рзЗ weather_data ржирж╛ржоржХ ржнрзЗрж░рж┐ржпрж╝рзЗржмрж▓рзЗ рж╕ржВрж░ржХрзНрж╖ржг ржХрж░рж╛ рж╣ржЪрзНржЫрзЗред


---

ЁЯФ╣ return weather_data

ЁЯСЙ ржлрж╛ржВрж╢ржирзЗрж░ ржмрж╛ржЗрж░рзЗ рж╕рзЗржЗ ржбрзЗржЯрж╛ рж░рж┐ржЯрж╛рж░рзНржи ржХрж░ржЫрзЗред


---

ЁЯФ╣ else: (ржпржжрж┐ рж╕рзНржЯрзНржпрж╛ржЯрж╛рж╕ ржХрзЛржб 200 ржирж╛ рж╣рзЯ)

ЁЯСЙ рждрж╛рж╣рж▓рзЗ ржПрж░рж░ ржорзЗрж╕рзЗржЬ ржкрзНрж░рж┐ржирзНржЯ ржХрж░ржмрзЗ ржПржмржВ None рж░рж┐ржЯрж╛рж░рзНржи ржХрж░ржмрзЗред


---

ЁЯФ╣ except requests.RequestException as e:

ЁЯСЙ ржпржжрж┐ ржЗржирзНржЯрж╛рж░ржирзЗржЯ рж╕ржорж╕рзНржпрж╛ ржмрж╛ ржЕржирзНржп ржХрзЛржирзЛ ржПржХрзНрж╕рж╕рзЗржкрж╢ржи рж╣рзЯ, рждрж╛рж╣рж▓рзЗ рж╕рзЗржЯрж╛ржУ рж╣рзНржпрж╛ржирзНржбрзЗрж▓ ржХрж░рж╛ рж╣ржЪрзНржЫрзЗред


---

ЁЯФ╣ def print_weather_data(weather_data):

ЁЯСЙ ржПржЗ ржлрж╛ржВрж╢ржирзЗрж░ ржХрж╛ржЬ рж╣рж▓рзЛ ржкрзНрж░рж╛ржкрзНржд ржЖржмрж╣рж╛ржУржпрж╝рж╛ ржбрзЗржЯрж╛ рж╕рзБржирзНржжрж░ржнрж╛ржмрзЗ ржкрзНрж░рж┐ржирзНржЯ ржХрж░рзЗ ржжрзЗржЦрж╛ржирзЛред


---

ЁЯФ╣ if weather_data:

ЁЯСЙ ржЪрзЗржХ ржХрж░ржЫрзЗ ржЖрж╕рж▓рзЗржЗ ржбрзЗржЯрж╛ ржПрж╕рзЗржЫрзЗ ржХрж┐ржирж╛ред


---

ЁЯФ╣ ржирж┐ржЪрзЗрж░ рж▓рж╛ржЗржирзЗ ржкрзНрж░рж┐ржирзНржЯ ржХрж░рж╛ рж╣ржЪрзНржЫрзЗ:

Location: тЖТ рж╢рж╣рж░рзЗрж░ ржирж╛ржо

Description: тЖТ ржЖржмрж╣рж╛ржУрзЯрж╛рж░ ржмрж░рзНржгржирж╛ (ржпрзЗржоржи "clear sky")

Temperature: тЖТ ржбрж┐ржЧрзНрж░рж┐ ржХрзЗрж▓ржнрж┐ржи ржерзЗржХрзЗ рж╕рзЗрж▓рж╕рж┐рзЯрж╛рж╕рзЗ ржХржиржнрж╛рж░рзНржЯ ржХрж░рзЗ ржжрзЗржЦрж╛ржирзЛ рж╣ржЪрзНржЫрзЗ temp - 273.15

Humidity: тЖТ ржмрж╛рждрж╛рж╕рзЗ ржЖрж░рзНржжрзНрж░рждрж╛рж░ ржкрж░рж┐ржорж╛ржг

Wind Speed: тЖТ ржмрж╛рждрж╛рж╕рзЗрж░ ржЧрждрж┐ (m/s)



---

ЁЯФ╣ def main():

ЁЯСЙ ржкрзНрж░рзЛржЧрзНрж░рж╛ржорзЗрж░ ржорзВрж▓ ржлрж╛ржВрж╢ржи


---

ЁЯФ╣ location=input("Enter Location Name:")

ЁЯСЙ ржЗржЙржЬрж╛рж░ ржерзЗржХрзЗ рж╢рж╣рж░рзЗрж░ ржирж╛ржо ржЗржиржкрзБржЯ ржирж┐ржЪрзНржЫрзЗ


---

ЁЯФ╣ weather_data= fetch_weather_data(location)

ЁЯСЙ fetch_weather_data() ржлрж╛ржВрж╢ржи ржХрж▓ ржХрж░рзЗ API ржерзЗржХрзЗ ржбрзЗржЯрж╛ ржЖржиржЫрзЗ


---

ЁЯФ╣ print_weather_data(weather_data)

ЁЯСЙ ржЖржмрж╣рж╛ржУрзЯрж╛рж░ ржбрзЗржЯрж╛ ржкрзНрж░рж┐ржирзНржЯ ржХрж░ржЫрзЗ


---

ЁЯФ╣ main()

ЁЯСЙ ржкрзНрж░рзЛржЧрзНрж░рж╛ржо ржЪрж╛рж▓рзБ ржХрж░рж╛рж░ ржЬржирзНржп main() ржлрж╛ржВрж╢ржи ржХрж▓ ржХрж░рж╛ рж╣ржЪрзНржЫрзЗред


---